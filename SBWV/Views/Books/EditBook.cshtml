﻿@using SBWV.Models.ViewModels

@model BookVM

<link rel="stylesheet" href="~/css/EditBook.css" />


<div id="catalog" enctype="multipart/form-data">
    <div class="item">

    <form asp-action="edit" asp-controller="Books" asp-route-id="@Model.Id" enctype="multipart/form-data">

        <h1>Редактировать</h1>

        <label asp-for="Title">Название:</label><br />
        <input type="text" asp-for="Title" />
        <br />
        <label asp-for="Author">Автор: </label><br />
        <input type="text" asp-for="Author"></input>
        <br />
        <label asp-for="Price">Цена: </label><br />
        <input type="number" asp-for="Price"></input>
        <br />
        <label asp-for="Swap">Обмен</label><br />
        <input type="checkbox" asp-for="Swap"></input>
        <br />
        @Html.DropDownListFor(m => m.Category, @ViewBag.Categories as List<SelectListItem>)
        <br />
        <label asp-for="Info">Информация</label><br />
        <input type="text" asp-for="Info" />
        <br />
        <label asp-for="EditPhoto">Изображения:</label><br />
        <br />
        <div class="image">
            @if (Model.Pictures != null)
            {

                @foreach (var i in Model.Pictures)
                {

                    <div class="container" enctype="multipart/form-data" id="@i.Id">
                            <img style="width:auto; height:200px" src="@i.Url" alt="Photo" />
                        <button class="btn" type="button" onclick="onDelete(@i.Id)">удалить</button>
                    </div>
                    <br />

                }

            }

            <br />
            <div enctype="multipart/form-data">
                <span>&nbsp;</span> <label>Выберите файл</label>
                <span>&nbsp;</span><input type="file" name="files" id="fileInput" multiple />
            </div>

        </div>

        <div class="list">
            <div class="item" style="text-align:center; align-content:center; align-items:center">
                <div class="file-input-container">
                    <label class="file-input-label" for="save-btn">Сохранить</label>
                    <input class="file-input" type="submit" id="save-btn" formmethod="post" />
                </div>
            </div>
        </div>



      

    </form>
    </div>

</div>



<script type="text/javascript">

    function onDelete(id) {
        if (!confirm("Удалить фото?"))
            return;

        $.ajax({
            url: '@Url.Action("DeletePhoto", "Books")',
            data: { id },
            success: function (result) {
                $('#' + id).remove();
                //alert(result.msg);
            },
            error: function (result) {
                alert(result.msg);
            }
        })
    }

    // function doUpdate() {

    //     var formData = {
    //         Id: 1,
    //         Title: $('#Title').val(),
    //         Author: $('#Author').val(),
    //         Src: ["1", "2", "3"]
    //     };

    //     $.ajax({
    //         type: "POST",
    //         url: '@Url.Action("UpdateData", "Books")',
    //         data: formData,
    //         success: function (result) {
    //             alert('success')
    //         }
    //     })
    // }

    var maxFileSize = 5242880;  // байт, максимальный размер загружаемого файла - 5 Мб
    var maxFilesCount = 5;      // максимальное количество файлов, которые можно загрузить для одной книжки
    var currentFileCount = @Html.Raw(Json.Serialize(Model.Pictures.Length));   // количество уже загруженных файлов

    $('#fileInput').on('change', function () {

        if (this.files.length > maxFilesCount - currentFileCount) {
            this.files = new DataTransfer().files;
            alert("Для выбора доступно не более " + (maxFilesCount - currentFileCount) + " изображений!");
        }

        for (var i = 0; i < this.files.length; i++) {
            if (this.files.item(i).size > maxFileSize) {
                this.files = new DataTransfer().files;
                alert("Максимальный размер изображения не более " + maxFileSize / 1024 / 1024 + " Мб!");
                return;
            }
        }
    });



    function onDelete(id) {
        if (!confirm("Удалить фото?"))
            return;

        $.ajax({
            url: '@Url.Action("DeletePhoto", "Books")',
            data: { id },
            success: function (result) {
                $('#' + id).remove();
                currentFileCount--;
            },
            error: function (result) {
                alert(result.msg);
            }
        })
    }

    // function doUpdate() {

    //     var formData = {
    //         Id: 1,
    //         Title: $('#Title').val(),
    //         Author: $('#Author').val(),
    //         Src: ["1", "2", "3"]
    //     };

    //     $.ajax({
    //         type: "POST",
    //         url: '@Url.Action("UpdateData", "Books")',
    //         data: formData,
    //         success: function (result) {
    //             alert('success')
    //         }
    //     })
    // }

</script>
