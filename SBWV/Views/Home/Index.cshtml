
@using SBWV.Models.ViewModels
@using X.PagedList
@using X.PagedList.Mvc.Core

@model IPagedList<BookVM>

@{
    Layout = "_Layout";
}


<div id="catalog">


<div class="list">
    
        
            @foreach (var item in Model)
            {
              <div class="item">
                  <div class="favorite-img">

                    <img id="@item.Id" alt="Favorite" src="~/images/favorite-icon-size_16.png" onclick="addFavorite(@item.Id)" />
                </div>
              <div class="top">
                @if (item.Pictures.Length != 0)
                {
                    <img src="@item.Pictures.First().Src" alt="Photo" />
                }
                else
                {

                    <img src="~/images/nocover.png">
                }

                <div class="info">
                    <h1 class="title">@item.Title</h1>
                    <h2 class="author">@item.Author</h2>
                    <h3 class="genre">@item.Category</h3>
                    <div class="condition">
                        <strong class="price">@item.Price</strong>
                        @if (item.Swap == true)
                        {

                            <img class="true" alt="ready for change" src="images/icons/change.svg">
                        }
                        else
                        {
                            <img class="false" alt="ready for change" src="images/icons/change.svg">
                        }
                        
                    </div>

                </div>

            </div>

            <p class="description">
                @item.Info
            </p>

            @Html.ActionLink("Подробнее", "Details", "Books", new { idBook = item.Id })

        </div>
            }
   
</div>

</div>

 

<br />


<div class="pagination">
        
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
        {
       LiElementClasses = new[] { "page-item" },
       PageClasses = new[] { "page-link" },
       ActiveLiElementClass = "active",
       ClassToApplyToFirstListItemInPager = "disabled",
       ClassToApplyToLastListItemInPager = "disabled"

    })
    
</div>

<script type="text/javascript">

    function addFavorite(idBook) {


        $.ajax({
            url: '@Url.Action("AddFavorites", "Account")',
            data: { idBook },
            success: function (result) {
                //todo сердце меняет цвет добавить вместо удаления

                //  $('#' + id).remove();
                //alert(result.msg);
            },
            error: function (result) {
                alert(result.msg);
            }
        })
    }

    // function doUpdate() {

    //     var formData = {
    //         Id: 1,
    //         Title: $('#Title').val(),
    //         Author: $('#Author').val(),
    //         Src: ["1", "2", "3"]
    //     };

    //     $.ajax({
    //         type: "POST",
    //         url: '@Url.Action("UpdateData", "Books")',
    //         data: formData,
    //         success: function (result) {
    //             alert('success')
    //         }
    //     })
    // }

</script>






