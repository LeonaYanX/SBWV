@{
    Layout = "_Layout"; 
   
}

@using SBWV.Helpers
@using SBWV.Models.ViewModels
@using X.PagedList
@using X.PagedList.Mvc.Core

@model IPagedList<BookVM>


<div id="catalog">


<div class="list">
    
        
            @foreach (var item in Model)
            {
        <div class="item">
            <div class="top">
                @if (item.Pictures.Length != 0)
                {
                    <img src="@item.Pictures.First().Src" alt="Photo" />
                }
                else
                {

                    <img src="~/images/nocover.png">
                }

                <div class="info">
                    <h1 class="title">@item.Title</h1>
                    <h2 class="author">@item.Author</h2>
                    <h3 class="genre">@item.Category</h3>
                    <div class="condition">
                        <strong class="price">@item.Price</strong>
                        @if (item.Swap == true)
                        {

                            <img class="true" alt="ready for change" src="images/icons/change.svg">
                        }
                        else
                        {
                            <img class="false" alt="ready for change" src="images/icons/change.svg">
                        }
                        
                    </div>

                </div>

            </div>

            <p class="description">
                @item.Info
            </p>

            @Html.ActionLink("Подробнее", "Details", "Books", new { idBook = item.Id })

        </div>
            }
   
</div>

</div>

 

<br />


<div class="pagination">
        
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
        {
       LiElementClasses = new[] { "page-item" },
       PageClasses = new[] { "page-link" },
       ActiveLiElementClass = "active",
       ClassToApplyToFirstListItemInPager = "disabled",
       ClassToApplyToLastListItemInPager = "disabled"

    })
    
</div>

    






